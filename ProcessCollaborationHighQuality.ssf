requires 1.2.0

############################################
# Copy this block for each person, change the sequence names to match
#
# preprocess Chris
# Change the directory name as needed to accommodate new people
cd Chris
set16bits

# Each sequence needs a unique name, so change "ChrisHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert ChrisHa -out=../../process
cd ..

cd O3
convert ChrisO3 -out=../../process
cd ..

cd S2
convert ChrisS2 -out=../../process
cd ..


# switch to the process directory for the rest of the steps
cd ../process

# align Chris' data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_ChrisHa, r_ChrisO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register ChrisHa -2pass -maxstars=100 -interp=ne
register ChrisO3 -2pass -maxstars=100 -interp=ne
register ChrisS2 -2pass -maxstars=100 -interp=ne
seqapplyreg ChrisHa -drizzle -framing=max
seqapplyreg ChrisO3 -drizzle -framing=max
seqapplyreg ChrisS2 -drizzle -framing=max

# extract background
seqsubsky r_ChrisHa 1
seqsubsky r_ChrisO3 1
seqsubsky r_ChrisS2 1

# stack Chris' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack bkg_r_ChrisHa rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/ChrisHa
stack bkg_r_ChrisO3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/ChrisO3
stack bkg_r_ChrisS2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/ChrisS2

# go up to project directory to do next person
cd ..

######################################################################
# End block to be copied for each person
###################################################################


#######################
# Process ChrisSV's files
#######################
# Change the directory name as needed to accommodate new people
cd ChrisSV
set16bits

# Each sequence needs a unique name, so change "ChrisHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

#cd Ha
#convert ChrisSVHa -out=../../process
#cd ..

cd O3
convert ChrisSVO3 -out=../../process
cd ..

cd S2
convert ChrisSVS2 -out=../../process
cd ..

# switch to the process directory for the rest of the steps
cd ../process

# align ChrisSV data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_ChrisHa, r_ChrisO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

#register ChrisSVHa -2pass -maxstars=100 -interp=ne
register ChrisSVO3 -2pass -maxstars=100 -interp=ne
register ChrisSVS2 -2pass -maxstars=100 -interp=ne
#seqapplyreg ChrisSVHa -framing=max
seqapplyreg ChrisSVO3 -framing=max
seqapplyreg ChrisSVS2 -framing=max

# extract background
#seqsubsky r_ChrisSVHa 1
seqsubsky r_ChrisSVO3 1
seqsubsky r_ChrisSVS2 1

# stack ChrisSV' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
#stack bkg_r_ChrisSVHa rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/ChrisSVHa
stack bkg_r_ChrisSVO3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/ChrisSVO3
stack bkg_r_ChrisSVS2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/ChrisSVS2


# go up to project directory to do next person
cd ..



#############################
# preprocess Texas
# Change the directory name as needed to accommodate new people
cd Texas
set16bits

# Each sequence needs a unique name, so change "ChrisHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert TexasHa -out=../../process
cd ..

cd O3
convert TexasO3 -out=../../process
cd ..

cd S2
convert TexasS2 -out=../../process
cd ..


# switch to the process directory for the rest of the steps
cd ../process

# align Texas' data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_TexasHa, r_TexasO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register TexasHa -2pass -maxstars=100 -interp=ne
register TexasO3 -2pass -maxstars=100 -interp=ne
register TexasS2 -2pass -maxstars=100 -interp=ne
seqapplyreg TexasHa -framing=max
seqapplyreg TexasO3 -framing=max
seqapplyreg TexasS2 -framing=max

# extract background
seqsubsky r_TexasHa 1
seqsubsky r_TexasO3 1
seqsubsky r_TexasS2 1

# stack Texas' data. Change the comment marks to enable or disable appropriate filters
set32bits
stack bkg_r_TexasHa rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/TexasHa
stack bkg_r_TexasO3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/TexasO3
stack bkg_r_TexasS2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/TexasS2


# go up to project directory to do next person
cd ..


#######################
# Process Linda-TOA130-ASI6200's files
#######################
# Change the directory name as needed to accommodate new people
cd Linda-TOA130-ASI6200
set16bits

# Each sequence needs a unique name, so change "ChrisHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert Linda-TOA130-ASI6200Ha -out=../../process
cd ..

cd O3
convert Linda-TOA130-ASI6200O3 -out=../../process
cd ..

cd S2
convert Linda-TOA130-ASI6200S2 -out=../../process
cd ..

# switch to the process directory for the rest of the steps
cd ../process

# align Linda-TOA130-ASI6200 data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_ChrisHa, r_ChrisO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register Linda-TOA130-ASI6200Ha -2pass -maxstars=100 -interp=ne
register Linda-TOA130-ASI6200O3 -2pass -maxstars=100 -interp=ne
register Linda-TOA130-ASI6200S2 -2pass -maxstars=100 -interp=ne
seqapplyreg Linda-TOA130-ASI6200Ha -framing=max
seqapplyreg Linda-TOA130-ASI6200O3 -framing=max
seqapplyreg Linda-TOA130-ASI6200S2 -framing=max

# extract background
seqsubsky r_Linda-TOA130-ASI6200Ha 1
seqsubsky r_Linda-TOA130-ASI6200O3 1
seqsubsky r_Linda-TOA130-ASI6200S2 1

# stack Linda-TOA130-ASI6200' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack bkg_r_Linda-TOA130-ASI6200Ha rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/Linda-TOA130-ASI6200Ha
stack bkg_r_Linda-TOA130-ASI6200O3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/Linda-TOA130-ASI6200O3
stack bkg_r_Linda-TOA130-ASI6200S2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/Linda-TOA130-ASI6200S2


# go up to project directory to do next person
cd ..


#######################
# Process Linda-TOA130-QHY268M's files
#######################
# Change the directory name as needed to accommodate new people
cd Linda-TOA130-QHY268M
set16bits

# Each sequence needs a unique name, so change "ChrisHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert Linda-TOA130-QHY268MHa -out=../../process
cd ..

cd O3
convert Linda-TOA130-QHY268MO3 -out=../../process
cd ..

cd S2
convert Linda-TOA130-QHY268MS2 -out=../../process
cd ..

# switch to the process directory for the rest of the steps
cd ../process

# align Linda-TOA130-QHY268M data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_ChrisHa, r_ChrisO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register Linda-TOA130-QHY268MHa -2pass -maxstars=100 -interp=ne
register Linda-TOA130-QHY268MO3 -2pass -maxstars=100 -interp=ne
register Linda-TOA130-QHY268MS2 -2pass -maxstars=100 -interp=ne
seqapplyreg Linda-TOA130-QHY268MHa -framing=max
seqapplyreg Linda-TOA130-QHY268MO3 -framing=max
seqapplyreg Linda-TOA130-QHY268MS2 -framing=max

# extract background
seqsubsky r_Linda-TOA130-QHY268MHa 1
seqsubsky r_Linda-TOA130-QHY268MO3 1
seqsubsky r_Linda-TOA130-QHY268MS2 1

# stack Linda-TOA130-QHY268M' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack bkg_r_Linda-TOA130-QHY268MHa rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/Linda-TOA130-QHY268MHa
stack bkg_r_Linda-TOA130-QHY268MO3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/Linda-TOA130-QHY268MO3
stack bkg_r_Linda-TOA130-QHY268MS2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/Linda-TOA130-QHY268MS2


# go up to project directory to do next person
cd ..



############################################
# preprocess JuanSV
# Change the directory name as needed to accommodate new people
cd JuanSV
set16bits

# Each sequence needs a unique name, so change "JuanSVHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert JuanSVHa -out=../../process
cd ..

cd O3
convert JuanSVO3 -out=../../process
cd ..

cd S2
convert JuanSVS2 -out=../../process
cd ..

# switch to the process directory for the rest of the steps
cd ../process

# align JuanSV' data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_JuanSVHa, r_JuanSVO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register JuanSVHa -2pass -maxstars=100 -interp=ne
register JuanSVO3 -2pass -maxstars=100 -interp=ne
register JuanSVS2 -2pass -maxstars=100 -interp=ne
seqapplyreg JuanSVHa -framing=max
seqapplyreg JuanSVO3 -framing=max
seqapplyreg JuanSVS2 -framing=max

# extract background
seqsubsky r_JuanSVHa 1
seqsubsky r_JuanSVO3 1
seqsubsky r_JuanSVS2 1

# stack JuanSV' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack bkg_r_JuanSVHa rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/JuanSVHa
stack bkg_r_JuanSVO3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/JuanSVO3
stack bkg_r_JuanSVS2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/JuanSVS2

# go up to project directory to do next person
cd ..

######################################################################
# End process JuanSV
###################################################################

############################################
# preprocess SRO
# Change the directory name as needed to accommodate new people
cd SRO
set16bits

# Each sequence needs a unique name, so change "SROHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert SROHa -out=../../process
cd ..

cd O3
convert SROO3 -out=../../process
cd ..

cd S2
convert SROS2 -out=../../process
cd ..


# switch to the process directory for the rest of the steps
cd ../process

# align SRO' data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_SROHa, r_SROO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register SROHa -2pass -maxstars=100 -interp=ne
register SROO3 -2pass -maxstars=100 -interp=ne
register SROS2 -2pass -maxstars=100 -interp=ne
seqapplyreg SROHa -framing=max
seqapplyreg SROO3 -framing=max
seqapplyreg SROS2 -framing=max

# extract background
seqsubsky r_SROHa 1
seqsubsky r_SROO3 1
seqsubsky r_SROS2 1

# stack SRO' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack bkg_r_SROHa rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/SROHa
stack bkg_r_SROO3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/SROO3
stack bkg_r_SROS2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/SROS2

# go up to project directory to do next person
cd ..

######################################################################
# End process SRO
###################################################################

############################################
# preprocess GowriOS330
# Change the directory name as needed to accommodate new people
cd GowriOS330
set16bits

# Each sequence needs a unique name, so change "GowriOS330Ha" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert GowriOS330Ha -out=../../process
cd ..

cd O3
convert GowriOS330O3 -out=../../process
cd ..

cd S2
convert GowriOS330S2 -out=../../process
cd ..


# switch to the process directory for the rest of the steps
cd ../process

# align GowriOS330' data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_GowriOS330Ha, r_GowriOS330O3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register GowriOS330Ha -2pass -maxstars=100 -interp=ne
register GowriOS330O3 -2pass -maxstars=100 -interp=ne
register GowriOS330S2 -2pass -maxstars=100 -interp=ne
seqapplyreg GowriOS330Ha -framing=max
seqapplyreg GowriOS330O3 -framing=max
seqapplyreg GowriOS330S2 -framing=max

# extract background
seqsubsky r_GowriOS330Ha 1
seqsubsky r_GowriOS330O3 1
seqsubsky r_GowriOS330S2 1

# stack GowriOS330' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack bkg_r_GowriOS330Ha rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/GowriOS330Ha
stack bkg_r_GowriOS330O3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/GowriOS330O3
stack bkg_r_GowriOS330S2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/GowriOS330S2

# go up to project directory to do next person
cd ..

######################################################################
# End process GowriOS330
###################################################################


############################################
# preprocess GowriAP92
# Change the directory name as needed to accommodate new people
cd GowriAP92
set16bits

# Each sequence needs a unique name, so change "GowriAP92Ha" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert GowriAP92Ha -out=../../process
cd ..

cd O3
convert GowriAP92O3 -out=../../process
cd ..

cd S2
convert GowriAP92S2 -out=../../process
cd ..


# switch to the process directory for the rest of the steps
cd ../process

# align GowriAP92' data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_GowriAP92Ha, r_GowriAP92O3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register GowriAP92Ha -2pass -maxstars=100 -interp=ne
register GowriAP92O3 -2pass -maxstars=100 -interp=ne
register GowriAP92S2 -2pass -maxstars=100 -interp=ne
seqapplyreg GowriAP92Ha -framing=max
seqapplyreg GowriAP92O3 -framing=max
seqapplyreg GowriAP92S2 -framing=max

# extract background
seqsubsky r_GowriAP92Ha 1
seqsubsky r_GowriAP92O3 1
seqsubsky r_GowriAP92S2 1

# stack GowriAP92' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack bkg_r_GowriAP92Ha rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/GowriAP92Ha
stack bkg_r_GowriAP92O3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/GowriAP92O3
stack bkg_r_GowriAP92S2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/GowriAP92S2

# go up to project directory to do next person
cd ..

######################################################################
# End process GowriOS330
###################################################################


############################################
# preprocess SRORBI
# Change the directory name as needed to accommodate new people
cd SRORBI
set16bits

# Each sequence needs a unique name, so change "SRORBIHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert SRORBIHa -out=../../process
cd ..

cd O3
convert SRORBIO3 -out=../../process
cd ..

cd S2
convert SRORBIS2 -out=../../process
cd ..


# switch to the process directory for the rest of the steps
cd ../process

# align SRORBI' data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_SRORBIHa, r_SRORBIO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register SRORBIHa -2pass -maxstars=100 -interp=ne
register SRORBIO3 -2pass -maxstars=100 -interp=ne
register SRORBIS2 -2pass -maxstars=100 -interp=ne
seqapplyreg SRORBIHa -framing=max
seqapplyreg SRORBIO3 -framing=max
seqapplyreg SRORBIS2 -framing=max

# extract background
seqsubsky r_SRORBIHa 1
seqsubsky r_SRORBIO3 1
seqsubsky r_SRORBIS2 1

# stack SRORBI' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack bkg_r_SRORBIHa rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/SRORBIHa
stack bkg_r_SRORBIO3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/SRORBIO3
stack bkg_r_SRORBIS2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/SRORBIS2

# go up to project directory to do next person
cd ..

######################################################################
# End process SRORBI
###################################################################

############################################
# preprocess TexasRBI
# Change the directory name as needed to accommodate new people
cd TexasRBI
set16bits

# Each sequence needs a unique name, so change "TexasRBIHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert TexasRBIHa -out=../../process
cd ..

cd O3
convert TexasRBIO3 -out=../../process
cd ..

cd S2
convert TexasRBIS2 -out=../../process
cd ..


# switch to the process directory for the rest of the steps
cd ../process

# align TexasRBI' data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_TexasRBIHa, r_TexasRBIO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register TexasRBIHa -2pass -maxstars=100 -interp=ne
register TexasRBIO3 -2pass -maxstars=100 -interp=ne
register TexasRBIS2 -2pass -maxstars=100 -interp=ne
seqapplyreg TexasRBIHa -framing=max
seqapplyreg TexasRBIO3 -framing=max
seqapplyreg TexasRBIS2 -framing=max

# extract background
seqsubsky r_TexasRBIHa 1
seqsubsky r_TexasRBIO3 1
seqsubsky r_TexasRBIS2 1

# stack TexasRBI' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack bkg_r_TexasRBIHa rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/TexasRBIHa
stack bkg_r_TexasRBIO3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/TexasRBIO3
stack bkg_r_TexasRBIS2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/TexasRBIS2

# go up to project directory to do next person
cd ..

######################################################################
# End process TexasRBI
###################################################################

############################################
# preprocess BlaineHyper
# Change the directory name as needed to accommodate new people
cd BlaineHyper
set16bits

# Each sequence needs a unique name, so change "BlaineHyperHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert BlaineHyperHa -out=../../process
cd ..

cd O3
convert BlaineHyperO3 -out=../../process
cd ..

cd S2
convert BlaineHyperS2 -out=../../process
cd ..


# switch to the process directory for the rest of the steps
cd ../process

# align BlaineHyper' data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_BlaineHyperHa, r_BlaineHyperO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register BlaineHyperHa -2pass -maxstars=100 -interp=ne
register BlaineHyperO3 -2pass -maxstars=100 -interp=ne
register BlaineHyperS2 -2pass -maxstars=100 -interp=ne
seqapplyreg BlaineHyperHa -framing=max
seqapplyreg BlaineHyperO3 -framing=max
seqapplyreg BlaineHyperS2 -framing=max

# extract background
seqsubsky r_BlaineHyperHa 1
seqsubsky r_BlaineHyperO3 1
seqsubsky r_BlaineHyperS2 1

# stack BlaineHyper' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack bkg_r_BlaineHyperHa rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/BlaineHyperHa
stack bkg_r_BlaineHyperO3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/BlaineHyperO3
stack bkg_r_BlaineHyperS2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/BlaineHyperS2

# go up to project directory to do next person
cd ..

######################################################################
# End process BlaineHyper
###################################################################


close
