requires 1.2.0

############################################
# Copy this block for each person, change the sequence names to match
#
# preprocess Chris
# Change the directory name as needed to accommodate new people
cd Chris
set16bits

# Each sequence needs a unique name, so change "ChrisHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert ChrisHa -out=../../process
cd ..

cd O3
convert ChrisO3 -out=../../process
cd ..

cd S2
convert ChrisS2 -out=../../process
cd ..


# switch to the process directory for the rest of the steps
cd ../process

# extract background
seqsubsky ChrisHa 1
seqsubsky ChrisO3 1
seqsubsky ChrisS2 1

# align Chris' data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_ChrisHa, r_ChrisO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register bkg_ChrisHa -2pass -maxstars=100 -interp=ne
register bkg_ChrisO3 -2pass -maxstars=100 -interp=ne
register bkg_ChrisS2 -2pass -maxstars=100 -interp=ne
seqapplyreg bkg_ChrisHa -drizzle -framing=min
seqapplyreg bkg_ChrisO3 -drizzle -framing=min
seqapplyreg bkg_ChrisS2 -drizzle -framing=min


# stack Chris' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack r_bkg_ChrisHa rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/ChrisHa
stack r_bkg_ChrisO3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/ChrisO3
stack r_bkg_ChrisS2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/ChrisS2

# go up to project directory to do next person
cd ..

######################################################################
# End block to be copied for each person
###################################################################


#######################
# Process ChrisSV's files
#######################
# Change the directory name as needed to accommodate new people
cd ChrisSV
set16bits

# Each sequence needs a unique name, so change "ChrisHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

#cd Ha
#convert ChrisSVHa -out=../../process
#cd ..

cd O3
convert ChrisSVO3 -out=../../process
cd ..

cd S2
convert ChrisSVS2 -out=../../process
cd ..

# switch to the process directory for the rest of the steps
cd ../process

# extract background
#seqsubsky ChrisSVHa 1
seqsubsky ChrisSVO3 1
seqsubsky ChrisSVS2 1

# align ChrisSV data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_ChrisHa, r_ChrisO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

#register bkg_ChrisSVHa -2pass -maxstars=100 -interp=ne
register bkg_ChrisSVO3 -2pass -maxstars=100 -interp=ne
register bkg_ChrisSVS2 -2pass -maxstars=100 -interp=ne
#seqapplyreg bkg_ChrisSVHa -framing=min
seqapplyreg bkg_ChrisSVO3 -framing=min
seqapplyreg bkg_ChrisSVS2 -framing=min


# stack ChrisSV' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
#stack r_bkg_ChrisSVHa rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/ChrisSVHa
stack r_bkg_ChrisSVO3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/ChrisSVO3
stack r_bkg_ChrisSVS2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/ChrisSVS2


# go up to project directory to do next person
cd ..



#############################
# preprocess Texas
# Change the directory name as needed to accommodate new people
cd Texas
set16bits

# Each sequence needs a unique name, so change "ChrisHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert TexasHa -out=../../process
cd ..

cd O3
convert TexasO3 -out=../../process
cd ..

cd S2
convert TexasS2 -out=../../process
cd ..


# switch to the process directory for the rest of the steps
cd ../process

# extract background
seqsubsky TexasHa 1
seqsubsky TexasO3 1
seqsubsky TexasS2 1

# align Texas' data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_TexasHa, r_TexasO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register bkg_TexasHa -2pass -maxstars=100 -interp=ne
register bkg_TexasO3 -2pass -maxstars=100 -interp=ne
register bkg_TexasS2 -2pass -maxstars=100 -interp=ne
seqapplyreg bkg_TexasHa -framing=min
seqapplyreg bkg_TexasO3 -framing=min
seqapplyreg bkg_TexasS2 -framing=min

# stack Texas' data. Change the comment marks to enable or disable appropriate filters
set32bits
stack r_bkg_TexasHa rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/TexasHa
stack r_bkg_TexasO3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/TexasO3
stack r_bkg_TexasS2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/TexasS2


# go up to project directory to do next person
cd ..


#######################
# Process Linda-TOA130-ASI6200's files
#######################
# Change the directory name as needed to accommodate new people
cd Linda-TOA130-ASI6200
set16bits

# Each sequence needs a unique name, so change "ChrisHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert Linda-TOA130-ASI6200Ha -out=../../process
cd ..

cd O3
convert Linda-TOA130-ASI6200O3 -out=../../process
cd ..

cd S2
convert Linda-TOA130-ASI6200S2 -out=../../process
cd ..

# switch to the process directory for the rest of the steps
cd ../process

# extract background
seqsubsky Linda-TOA130-ASI6200Ha 1
seqsubsky Linda-TOA130-ASI6200O3 1
seqsubsky Linda-TOA130-ASI6200S2 1

# align Linda-TOA130-ASI6200 data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_ChrisHa, r_ChrisO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register bkg_Linda-TOA130-ASI6200Ha -2pass -maxstars=100 -interp=ne
register bkg_Linda-TOA130-ASI6200O3 -2pass -maxstars=100 -interp=ne
register bkg_Linda-TOA130-ASI6200S2 -2pass -maxstars=100 -interp=ne
seqapplyreg bkg_Linda-TOA130-ASI6200Ha -framing=min
seqapplyreg bkg_Linda-TOA130-ASI6200O3 -framing=min
seqapplyreg bkg_Linda-TOA130-ASI6200S2 -framing=min

# stack Linda-TOA130-ASI6200' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack r_bkg_Linda-TOA130-ASI6200Ha rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/Linda-TOA130-ASI6200Ha
stack r_bkg_Linda-TOA130-ASI6200O3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/Linda-TOA130-ASI6200O3
stack r_bkg_Linda-TOA130-ASI6200S2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/Linda-TOA130-ASI6200S2


# go up to project directory to do next person
cd ..


#######################
# Process Linda-TOA130-QHY268M's files
#######################
# Change the directory name as needed to accommodate new people
cd Linda-TOA130-QHY268M
set16bits

# Each sequence needs a unique name, so change "ChrisHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert Linda-TOA130-QHY268MHa -out=../../process
cd ..

cd O3
convert Linda-TOA130-QHY268MO3 -out=../../process
cd ..

cd S2
convert Linda-TOA130-QHY268MS2 -out=../../process
cd ..

# switch to the process directory for the rest of the steps
cd ../process

# extract background
seqsubsky Linda-TOA130-QHY268MHa 1
seqsubsky Linda-TOA130-QHY268MO3 1
seqsubsky Linda-TOA130-QHY268MS2 1

# align Linda-TOA130-QHY268M data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_ChrisHa, r_ChrisO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register bkg_Linda-TOA130-QHY268MHa -2pass -maxstars=100 -interp=ne
register bkg_Linda-TOA130-QHY268MO3 -2pass -maxstars=100 -interp=ne
register bkg_Linda-TOA130-QHY268MS2 -2pass -maxstars=100 -interp=ne
seqapplyreg bkg_Linda-TOA130-QHY268MHa -framing=min
seqapplyreg bkg_Linda-TOA130-QHY268MO3 -framing=min
seqapplyreg bkg_Linda-TOA130-QHY268MS2 -framing=min

# stack Linda-TOA130-QHY268M' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack r_bkg_Linda-TOA130-QHY268MHa rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/Linda-TOA130-QHY268MHa
stack r_bkg_Linda-TOA130-QHY268MO3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/Linda-TOA130-QHY268MO3
stack r_bkg_Linda-TOA130-QHY268MS2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/Linda-TOA130-QHY268MS2


# go up to project directory to do next person
cd ..



############################################
# preprocess JuanSV
# Change the directory name as needed to accommodate new people
cd JuanSV
set16bits

# Each sequence needs a unique name, so change "JuanSVHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert JuanSVHa -out=../../process
cd ..

cd O3
convert JuanSVO3 -out=../../process
cd ..

cd S2
convert JuanSVS2 -out=../../process
cd ..

# switch to the process directory for the rest of the steps
cd ../process

# extract background
seqsubsky JuanSVHa 1
seqsubsky JuanSVO3 1
seqsubsky JuanSVS2 1

# align JuanSV' data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_JuanSVHa, r_JuanSVO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register bkg_JuanSVHa -2pass -maxstars=100 -interp=ne
register bkg_JuanSVO3 -2pass -maxstars=100 -interp=ne
register bkg_JuanSVS2 -2pass -maxstars=100 -interp=ne
seqapplyreg bkg_JuanSVHa -framing=min
seqapplyreg bkg_JuanSVO3 -framing=min
seqapplyreg bkg_JuanSVS2 -framing=min

# stack JuanSV' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack r_bkg_JuanSVHa rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/JuanSVHa
stack r_bkg_JuanSVO3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/JuanSVO3
stack r_bkg_JuanSVS2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/JuanSVS2

# go up to project directory to do next person
cd ..

######################################################################
# End process JuanSV
###################################################################

############################################
# preprocess SRO
# Change the directory name as needed to accommodate new people
cd SRO
set16bits

# Each sequence needs a unique name, so change "SROHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert SROHa -out=../../process
cd ..

cd O3
convert SROO3 -out=../../process
cd ..

cd S2
convert SROS2 -out=../../process
cd ..


# switch to the process directory for the rest of the steps
cd ../process

# extract background
seqsubsky SROHa 1
seqsubsky SROO3 1
seqsubsky SROS2 1

# align SRO' data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_SROHa, r_SROO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register bkg_SROHa -2pass -maxstars=100 -interp=ne
register bkg_SROO3 -2pass -maxstars=100 -interp=ne
register bkg_SROS2 -2pass -maxstars=100 -interp=ne
seqapplyreg bkg_SROHa -framing=min
seqapplyreg bkg_SROO3 -framing=min
seqapplyreg bkg_SROS2 -framing=min

# stack SRO' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack r_bkg_SROHa rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/SROHa
stack r_bkg_SROO3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/SROO3
stack r_bkg_SROS2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/SROS2

# go up to project directory to do next person
cd ..

######################################################################
# End process SRO
###################################################################

############################################
# preprocess GowriOS330
# Change the directory name as needed to accommodate new people
cd GowriOS330
set16bits

# Each sequence needs a unique name, so change "GowriOS330Ha" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert GowriOS330Ha -out=../../process
cd ..

cd O3
convert GowriOS330O3 -out=../../process
cd ..

cd S2
convert GowriOS330S2 -out=../../process
cd ..


# switch to the process directory for the rest of the steps
cd ../process

# extract background
seqsubsky GowriOS330Ha 1
seqsubsky GowriOS330O3 1
seqsubsky GowriOS330S2 1

# align GowriOS330' data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_GowriOS330Ha, r_GowriOS330O3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register bkg_GowriOS330Ha -2pass -maxstars=100 -interp=ne
register bkg_GowriOS330O3 -2pass -maxstars=100 -interp=ne
register bkg_GowriOS330S2 -2pass -maxstars=100 -interp=ne
seqapplyreg bkg_GowriOS330Ha -framing=min
seqapplyreg bkg_GowriOS330O3 -framing=min
seqapplyreg bkg_GowriOS330S2 -framing=min

# stack GowriOS330' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack r_bkg_GowriOS330Ha rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/GowriOS330Ha
stack r_bkg_GowriOS330O3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/GowriOS330O3
stack r_bkg_GowriOS330S2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/GowriOS330S2

# go up to project directory to do next person
cd ..

######################################################################
# End process GowriOS330
###################################################################


############################################
# preprocess GowriAP92
# Change the directory name as needed to accommodate new people
cd GowriAP92
set16bits

# Each sequence needs a unique name, so change "GowriAP92Ha" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert GowriAP92Ha -out=../../process
cd ..

cd O3
convert GowriAP92O3 -out=../../process
cd ..

cd S2
convert GowriAP92S2 -out=../../process
cd ..


# switch to the process directory for the rest of the steps
cd ../process

# extract background
seqsubsky GowriAP92Ha 1
seqsubsky GowriAP92O3 1
seqsubsky GowriAP92S2 1

# align GowriAP92' data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_GowriAP92Ha, r_GowriAP92O3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register bkg_GowriAP92Ha -2pass -maxstars=100 -interp=ne
register bkg_GowriAP92O3 -2pass -maxstars=100 -interp=ne
register bkg_GowriAP92S2 -2pass -maxstars=100 -interp=ne
seqapplyreg bkg_GowriAP92Ha -framing=min
seqapplyreg bkg_GowriAP92O3 -framing=min
seqapplyreg bkg_GowriAP92S2 -framing=min

# stack GowriAP92' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack r_bkg_GowriAP92Ha rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/GowriAP92Ha
stack r_bkg_GowriAP92O3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/GowriAP92O3
stack r_bkg_GowriAP92S2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/GowriAP92S2

# go up to project directory to do next person
cd ..

######################################################################
# End process GowriOS330
###################################################################


############################################
# preprocess SRORBI
# Change the directory name as needed to accommodate new people
cd SRORBI
set16bits

# Each sequence needs a unique name, so change "SRORBIHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert SRORBIHa -out=../../process
cd ..

cd O3
convert SRORBIO3 -out=../../process
cd ..

cd S2
convert SRORBIS2 -out=../../process
cd ..


# switch to the process directory for the rest of the steps
cd ../process

# extract background
seqsubsky SRORBIHa 1
seqsubsky SRORBIO3 1
seqsubsky SRORBIS2 1

# align SRORBI' data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_SRORBIHa, r_SRORBIO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register bkg_SRORBIHa -2pass -maxstars=100 -interp=ne
register bkg_SRORBIO3 -2pass -maxstars=100 -interp=ne
register bkg_SRORBIS2 -2pass -maxstars=100 -interp=ne
seqapplyreg bkg_SRORBIHa -framing=min
seqapplyreg bkg_SRORBIO3 -framing=min
seqapplyreg bkg_SRORBIS2 -framing=min

# stack SRORBI' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack r_bkg_SRORBIHa rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/SRORBIHa
stack r_bkg_SRORBIO3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/SRORBIO3
stack r_bkg_SRORBIS2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/SRORBIS2

# go up to project directory to do next person
cd ..

######################################################################
# End process SRORBI
###################################################################

############################################
# preprocess TexasRBI
# Change the directory name as needed to accommodate new people
cd TexasRBI
set16bits

# Each sequence needs a unique name, so change "TexasRBIHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert TexasRBIHa -out=../../process
cd ..

cd O3
convert TexasRBIO3 -out=../../process
cd ..

cd S2
convert TexasRBIS2 -out=../../process
cd ..


# switch to the process directory for the rest of the steps
cd ../process

# extract background
seqsubsky TexasRBIHa 1
seqsubsky TexasRBIO3 1
seqsubsky TexasRBIS2 1

# align TexasRBI' data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_TexasRBIHa, r_TexasRBIO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register bkg_TexasRBIHa -2pass -maxstars=100 -interp=ne
register bkg_TexasRBIO3 -2pass -maxstars=100 -interp=ne
register bkg_TexasRBIS2 -2pass -maxstars=100 -interp=ne
seqapplyreg bkg_TexasRBIHa -framing=min
seqapplyreg bkg_TexasRBIO3 -framing=min
seqapplyreg bkg_TexasRBIS2 -framing=min

# stack TexasRBI' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack r_bkg_TexasRBIHa rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/TexasRBIHa
stack r_bkg_TexasRBIO3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/TexasRBIO3
stack r_bkg_TexasRBIS2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/TexasRBIS2

# go up to project directory to do next person
cd ..

######################################################################
# End process TexasRBI
###################################################################

############################################
# preprocess BlaineHyper
# Change the directory name as needed to accommodate new people
cd BlaineHyper
set16bits

# Each sequence needs a unique name, so change "BlaineHyperHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert BlaineHyperHa -out=../../process
cd ..

cd O3
convert BlaineHyperO3 -out=../../process
cd ..

cd S2
convert BlaineHyperS2 -out=../../process
cd ..


# switch to the process directory for the rest of the steps
cd ../process

# extract background
seqsubsky BlaineHyperHa 1
seqsubsky BlaineHyperO3 1
seqsubsky BlaineHyperS2 1

# align BlaineHyper' data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_BlaineHyperHa, r_BlaineHyperO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register bkg_BlaineHyperHa -2pass -maxstars=100 -interp=ne
register bkg_BlaineHyperO3 -2pass -maxstars=100 -interp=ne
register bkg_BlaineHyperS2 -2pass -maxstars=100 -interp=ne
seqapplyreg bkg_BlaineHyperHa -framing=min
seqapplyreg bkg_BlaineHyperO3 -framing=min
seqapplyreg bkg_BlaineHyperS2 -framing=min

# stack BlaineHyper' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack r_bkg_BlaineHyperHa rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/BlaineHyperHa
stack r_bkg_BlaineHyperO3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/BlaineHyperO3
stack r_bkg_BlaineHyperS2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/BlaineHyperS2

# go up to project directory to do next person
cd ..

######################################################################
# End process BlaineHyper
###################################################################


#######################
# Process Alastair's files
#######################
# Change the directory name as needed to accommodate new people
cd Alastair
set16bits

# Each sequence needs a unique name, so change "ChrisHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert AlastairHa -out=../../process
cd ..

cd O3
convert AlastairO3 -out=../../process
cd ..

cd S2
convert AlastairS2 -out=../../process
cd ..

# switch to the process directory for the rest of the steps
cd ../process

# extract background
seqsubsky AlastairHa 1
seqsubsky AlastairO3 1
seqsubsky AlastairS2 1

# align Alastair data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_ChrisHa, r_ChrisO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register bkg_AlastairHa -2pass -maxstars=100 -interp=ne
register bkg_AlastairO3 -2pass -maxstars=100 -interp=ne
register bkg_AlastairS2 -2pass -maxstars=100 -interp=ne
seqapplyreg bkg_AlastairHa -framing=min
seqapplyreg bkg_AlastairO3 -framing=min
seqapplyreg bkg_AlastairS2 -framing=min

# stack Alastair' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack r_bkg_AlastairHa rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/AlastairHa
stack r_bkg_AlastairO3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/AlastairO3
stack r_bkg_AlastairS2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/AlastairS2


# go up to project directory to do next person
cd ..

#######################
# Process Kevin's files
#######################
# Change the directory name as needed to accommodate new people
cd Kevin
set16bits

# Each sequence needs a unique name, so change "ChrisHa" as needed for new people or for appropriate filter.
# For example, if Chris provides Blue filter data, create a convert statement with sequence ChrisBlue

cd Ha
convert KevinHa -out=../../process
cd ..

cd O3
convert KevinO3 -out=../../process
cd ..

cd S2
convert KevinS2 -out=../../process
cd ..

# switch to the process directory for the rest of the steps
cd ../process

# extract background
seqsubsky KevinHa 1
seqsubsky KevinO3 1
seqsubsky KevinS2 1

# align Kevin data. Add other register commands as needed to accommodate additional filters
# Will automatically create new sequence called r_ChrisHa, r_ChrisO3, etc
# Change the comment marks to enable or disable appropriate filters for each person

register bkg_KevinHa -2pass -maxstars=100 -interp=ne
register bkg_KevinO3 -2pass -maxstars=100 -interp=ne
register bkg_KevinS2 -2pass -maxstars=100 -interp=ne
seqapplyreg bkg_KevinHa -framing=min
seqapplyreg bkg_KevinO3 -framing=min
seqapplyreg bkg_KevinS2 -framing=min

# stack Kevin' data. Change the comment marks to enable or disable appropriate filters
# change the OUTPUT DIRECTORY names and the SEQUENCE NAMES on each command for a new person

set32bits
stack r_bkg_KevinHa rej 3 3 -norm=addscale -output_norm -out=../0_Masters/Ha/KevinHa
stack r_bkg_KevinO3 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/O3/KevinO3
stack r_bkg_KevinS2 rej 3 3 -norm=addscale -output_norm -out=../0_Masters/S2/KevinS2


# go up to project directory to do next person
cd ..

close
